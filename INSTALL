=======================================
||BUILDING AND INSTALLING HYPERMAIL  ||
=======================================

PLEASE READ THE RELEASE NOTES FIRST.

Quick summary:
=============
cd hypermail_checkout_directory
./autogen.sh
./configure
make
make install

Read the separate UPGRADE file for changes that might affect
users of older versions.

External dependencies:
======================

Note: configure will warn you if a mandatory dependence is missing and
if it's going to skip or handle in a different way the optional ones.

For compiling hypermail:

* bison >=3.7 or yacc (mandatory)
  bison is prefered as it's what we use in our dev. environment.

* libiconv (mandatory)
  libiconv is included in the libc6 package as a GNU standard C
  library. In order to compile hypermail, you'll need to install its
  headers

  On Debian:

     apt-get install libc6-dev

* pkgconf (mandatory)
  pkgconf is a system for configuring build dependency information
  and is used for compiling against some of the libraries hypermail uses.

  On Debian:

     apt-get install pkgconf
     
* libpcre2-dev >= 10.32 (optional)
  if you don't have it, hypermail will compile and link with
  it's own shipped-in version (src/pcre2)

* libgdbm-dev (optional)
  only needed if you plan to use the usegdbm hypermail configuration
  option (unmaintained, see docs/hmrc.html)

* libchardet-dev (optional)
  only needed if you want to benefit from automatic character set
  detection in messages that don't provide any charset information.
  Mostly useful when you're dealing with archives having messages
  dating from 1990-2002, when many mail clients were a bit broken.

  On Debian:
  
     apt-get install libchardet-dev libchardet

  If not available in your system, you can download the source code,
  compile and install it:
  
     https://github.com/Joungkyun/libchardet
  
For running hypermail:

* libpcre2 >= 10.42
  only needed if you linked hypermail against the system libpcre
  library

* libchardet (optional)
  only needed if you linked hypermail against the system libchardet
  library
  
* libgdm (optional)
  only needed if you plan to use the usegdbm hypermail configuration option
  (unmaintained, see docs/hmrc.html)

SECURITY WARNING:
================

   Do not put hypermail's output anyplace where a web server might
   have server side includes (SSI) enabled, unless you are sure you
   know what you are doing. If in doubt, check your web server
   configuration. If you are using Apache, look for an Options line
   that mentions Includes or IncludesNOEXEC. The author of an email
   normally has substantial control over what files hypermail creates,
   particularly via attachments. Hypermail is designed to insure that
   filenames don't end in .shtml and don't contain characters like /
   or \, which prevent some security problems, but there are few
   restrictions on what can go in a file (e.g. possibly malicious html
   tags - try the "text_types = *" option or "ignore_types =
   $NONPLAIN" option if you want to restrict this). You might also
   want to look at the attachmentlink and unsafe_chars options to
   restrict attachment filenames.

   Also, it is probably a bad idea to enable cgi execution on a
   directory that hypermail puts files in.

Before Building Hypermail:
==========================

   Hypermail now uses "configure" to generate the Makefiles. In the
   top level directory, type "configure" to create the Makefiles.  If
   it does not work on your system, please let us know.

Building Hypermail:
===================

   Hypermail has been normally compiled and run on Unix-based systems
   in the past. It compiles with both gcc and clang in the following
   platforms:

     Debian 12, Ubuntu 22.04.2 LTS

   Previously, it used to compile against a wide variety of Unix
   platforms, MacOS, and Cygwin but we've not done it recently
   against those platforms nor we have access to them anymore. We'll
   update this page when there is more feedback.

   For some (old) information on Cygwin and build hypermail on a
   Windows-based system, see the file docs/Install-win32.txt.

   Generic Build:

   0) If you're checking out and building hypermail for the first time,
      type "./autogen" to update the configure files to your
      local system setup.

      You only need to do this once, when you do the clone of the
      repository.
       
    1) Type "./configure". This creates the makefiles and the
           config.h file needed to build the software.
	   
       If you want to install Hypermail somewhere other than in
       /usr/local, run something like this instead:
       ./configure --prefix=$HOME

       There are some options you can enable or disable but all the
       useful ones are enabled by default. You can also use the
       options to give paths to local checkout of the dependent libraries
       if you didn't install them on your system.
       ./configure --help
	  
       Check out the configure output to see if you're missing system
       libraries. If yes, install them and launch ./configure again.


    2) Type "make". This will build the software.
    
       If it has trouble finding gdbm (e.g. if it fails with a message
       such as "cannot open -lgdbm", you may need to disable gdbm
       with:

        ./configure  --without-gdbm

       and type "make clean" and then "make" again. (Note that without
       gdbm, you can't do incremental updates using the folder_by_date
       option).

   On some systems you may need to add "-R/usr/local/lib -L/usr/local/lib"
   to the CFLAGS variable in the Makefiles, or alter your LD_LIBRARY_PATH
   environment variable (Willi Kernen reports that on a 64-bit Solaris,
   changing LD_LIBRARY_PATH to:

      /usr/lib:/usr/local/lib:/usr/ccs/lib:/usr/ucb/lib:/usr/openwin/lib

   fixed a problem).

   If the make fails at this line: 

        ar cq libpcre.a maketables.o get.o study.o pcre.o

   and the configure had said:

       checking whether to build static libraries... no

   then you probably should try:

       ./configure --disable-shared

   If the make fails with a message such as:

proto.h:99: conflicting types for `strcasestr'
/usr/include/string.h:86: previous declaration of `strcasestr'
 
   then you should try removing the line in proto.h that refers to
   strcasestr.

Testing Hypermail:
==================

    If you wish to test the new hypermail before installing it

       	- chdir to tests/

	- copy a mailbox you have to a local file named "testmail"

	- type "sh ./testhm"

    This will generate an archive under a newly created "testdir/"
    directory.  Check it out with your favorite browser.

    When you are done testing, 

        - remove the testdir directory,

        - remove the testmail file.

    (See the README in tests/ for more information.)

Installing Hypermail:
=====================

    You may need to login as root for this step.
    To install just the Hypermail programs:

        - chdir to the src/ directory

        - Type "make install". (Or, if you prefer, just copy "hypermail" to
       wherever you want it).

    If you want a full install of Hypermail and its documentation, do

       make install

    in the main Hypermail directory (the one where you did
    ./configure).  If it fails with something like:
    
        mkdir: "/usr/local/apache/htdocs/hypermail": Permission denied
	
    then you may need to rerun ./configure giving it the directory in
    which you want to install html documentation files using this
    option:
    
     --with-htmldir=/var/www/htdocs
